--kim
/*
1. query
   select data검색어

2. dml(data maipulation language)
    insert, update, delete
    
3. ddl(data difinition language)
    create, alter, drop, rename
    
4. tcl(transaction control language)
    truncation, commit, rollback, savepoint
    
5. dcl(data control language)
    grant, revoke
*/

select * from tab;

--주석

select * from personnel;
SELECT * from DIVISION;
SELECT * from PAYGRADE;
SELECT * from BONUS;

SELECT pname, pay,job,DNO,pno from PERSONNEL;

SELECT job from PERSONNEL;

--중복제거
SELECT DISTINCT job from PERSONNEL;

--pay기준으로 오름차순 정렬
SELECT * from PERSONNEL
ORDER by pay ASC;

--asc가 디폴트
SELECT * from PERSONNEL
ORDER by pname;

--내림차순 정렬
SELECT * from PERSONNEL
ORDER by pay DESC;

SELECT * from PERSONNEL
ORDER by startdate DESC;

SELECT * from PERSONNEL
ORDER by 4 DESC;

SELECT PNAME,job,STARTDATE,DNO from PERSONNEL
ORDER by 4 DESC;

--별칭, as 생략 가능
SELECT pno as 사원번호,pname as 이름,pay 월급 from PERSONNEL;

--파생 컬럼, 데이터 꺼내면서 연산가능
SELECT PNAME,pay,PAY+1000 보너스 FROM PERSONNEL;
SELECT PNAME,pay,PAY+1000 "보 너 스" FROM PERSONNEL;
SELECT PNAME,pay,PAY+1000 보_너_스 FROM PERSONNEL;

--ORDER BY 에서만 별칭 사용 가능
SELECT PNAME,pay,PAY+1000 보너스 FROM PERSONNEL
ORDER BY 보너스;
--보통 이렇게 씀
SELECT PNAME,pay,PAY+1000 보너스 FROM PERSONNEL
ORDER BY PAY+1000;

--NULL,정렬때 큰값으로 인식
SELECT * FROM PERSONNEL
ORDER BY MANAGER ASC;

SELECT * FROM PERSONNEL
ORDER BY MANAGER DESC;

--사원의 급여와 일년치 연봉을 구하시오
SELECT PNO,PNAME,PAY,JOB,PAY*12 AS 연봉 FROM PERSONNEL;

--컬럼 붙여서 보기
SELECT PNAME || PNO FROM PERSONNEL;
SELECT PNAME || ' ' ||PNO FROM PERSONNEL;

--NVL(A,B) A가 NULL이면 B출력
SELECT PAY,BONUS,NVL(BONUS*1.1,0) 인상분 FROM PERSONNEL;

--조건절(WHERE), 행제한
-- =, >= , <=, <>, >, <

--급여가 1600인 사원
SELECT * FROM PERSONNEL WHERE PAY = 1600;

--사번이 1116인 사원
SELECT * FROM PERSONNEL WHERE PNO = 1116;

--급여가 2000이하인 사원
SELECT * FROM PERSONNEL WHERE PAY <= 2000;

--90년 12월 17일에 입사한 사원
SELECT * FROM PERSONNEL WHERE STARTDATE = '1990-12-17';

SELECT * FROM NLS_SESSION_PARAMETERS;

--업무가 CLERK인 사원
SELECT * FROM PERSONNEL WHERE JOB = 'CLERK';

--이름이 JAMES인 사원
SELECT * FROM PERSONNEL WHERE PNAME = 'JAMES'; --O

SELECT * FROM PERSONNEL WHERE PNAME = 'james'; -- X


--논리연산자
--AND, OR, NOT

--부서번호가 10번이고 급여가 3000이상인 사원
SELECT * FROM PERSONNEL WHERE DNO = 10 AND PAY >= 3000;

--직업이 SALESMAN 이고 90년 이후에 입사한 사원
SELECT * FROM PERSONNEL WHERE JOB = 'SALESMAN' AND STARTDATE > '1990-12-31';

--부서번호가 10번이거나 급여가 3000이상인 사원
SELECT * FROM PERSONNEL WHERE DNO = 10 OR PAY >= 3000;

--직업이 SALESMAN 또는 90년 이후에 입사한 사원
SELECT * FROM PERSONNEL WHERE JOB = 'SALESMAN' OR STARTDATE > '1990-12-31';

--업무가 SALESMAN,CLERK이 아닌 사원
SELECT * FROM PERSONNEL WHERE NOT JOB = 'SALESMAN' AND NOT JOB = 'CLERK';

SELECT * FROM PERSONNEL WHERE JOB <> 'SALESMAN' AND JOB <> 'CLERK';

SELECT * FROM PERSONNEL WHERE JOB NOT IN('SALESMAN','CLERK');

--업무가 SALESMAN 또는 CLERK인 사원
SELECT * FROM PERSONNEL WHERE JOB IN('SALESMAN','CLERK');

--급여가 1000에서 2000인 사원
SELECT * FROM PERSONNEL WHERE PAY >= 1000 AND PAY < = 2000;

SELECT * FROM PERSONNEL WHERE PAY BETWEEN 1000 AND 2000;

SELECT * FROM PERSONNEL WHERE PAY BETWEEN 2000 AND 1000; --X

SELECT * FROM PERSONNEL WHERE STARTDATE BETWEEN '1991-01-01' AND '1991-09-30';

--부서번호가 20과 30 사이의 사원
SELECT * FROM PERSONNEL WHERE DNO IN (20,30); -- OR

SELECT * FROM PERSONNEL WHERE DNO BETWEEN 20 AND 30; -- 20 <= DNO <= 30


--이름이 A로 시작되는 사원
SELECT * FROM PERSONNEL WHERE PNAME LIKE 'A%';

SELECT * FROM PERSONNEL WHERE PNO LIKE '111%'; -- 앞자리 111 시작, 자릿수가 4자리 이상

SELECT * FROM PERSONNEL WHERE PNO LIKE '111_'; -- 앞자리 111 시작, 자릿수가 4자리

SELECT * FROM PERSONNEL WHERE PNO LIKE '1__1'; -- 앞뒷자리 1, 자릿수가 4자리

--90년도에 입사한 사원
SELECT * FROM PERSONNEL WHERE STARTDATE LIKE '90%';


/*
 .	: 임의의 한 문자
 |	: OR과 동일 (왼쪽 또는 오른쪽과 일치)
 []	: 문자 클래스
 [-] : 문자 범위 (0-9, a-z, A-Z, 가-힝)
 [^] : 부정 문자 클래스
 \	: 다음에 오는 문자를 이스케이프 (메타 문자를 일반 문자로)
 ^	: 문자열의 시작과 일치
 $	: 문자열의 끝과 일치
*/

--정규화 표현식
SELECT * FROM PERSONNEL WHERE REGEXP_LIKE (PNO, '11[^2]');
-- '^JO' == LIKE 'JO%'
SELECT * FROM PERSONNEL
WHERE REGEXP_LIKE(PNAME,'^JO|^JA') ;

--이메일에서 아이디 추출
SELECT REGEXP_SUBSTR('GILDONG@NAVER.COM','[^@]+') 아이디 FROM DUAL;

SELECT * FROM DUAL;

--O_K를 포함한 이름을 가진 사원
SELECT * FROM PERSONNEL;

INSERT INTO PERSONNEL VALUES (2000,'HELLO_KIM','SALESMAN',1116,'2025-7-22',5000,'',20);

INSERT INTO PERSONNEL VALUES (3000,'HELLOZKIM','SALESMAN',1116,'2025-7-22',5000,'',20);
--HELLO_KIM
SELECT * FROM PERSONNEL WHERE PNAME LIKE '%O\_K%' ESCAPE '\';

--DELETE
DELETE PERSONNEL WHERE PNO IN (2000,3000);

SELECT * FROM PERSONNEL;
--DB 변경하고 COMMIT해서 저장 해야됨
COMMIT;


--NULL
SELECT * FROM PERSONNEL;

SELECT * FROM PERSONNEL WHERE MANAGER = NULL; --X

SELECT * FROM PERSONNEL WHERE MANAGER = 'NULL'; --X

SELECT * FROM PERSONNEL WHERE MANAGER IS NULL; --O

SELECT * FROM PERSONNEL WHERE MANAGER IS NOT NULL; --O


--업무가 MANAGER고 급여가 1500이상인 사원 또는 업무가 SALESMAN인 사원을 검색
SELECT * FROM PERSONNEL WHERE (JOB = 'MANAGER' AND PAY >= 1500) OR JOB = 'SALESMAN';


--함수

--숫자함수

--ROUND : 반올림
--  1  2  3  4  .  5  6  7
-- -4 -3 -2 -1  0  1  2  3
-- 2의 자릿수에서 반올림해라
SELECT ROUND(45.275, 1) FROM DUAL;--45.3
---1의 자릿수에서 반올림해라
SELECT ROUND(45.275, -1) FROM DUAL;--50
--0의 자릿수에서 반올림해라
SELECT ROUND(45.275, 0) FROM DUAL;--45
--소숫점 반올림해서 정수만
SELECT ROUND(45.275) FROM DUAL;--45

SELECT PNO,PNAME,PAY,ROUND(PAY,-2) FROM PERSONNEL;

--TRUNC : 절삭
--  1  2  3  4  .  5  6  7
-- -4 -3 -2 -1  0  1  2  3
SELECT TRUNC(45.245,2) FROM DUAL;--45.24

SELECT TRUNC(45.245,-1) FROM DUAL;--40

--CEIL/FLOOR(올림/내림), 양수만 반환
SELECT CEIL(461.21) FROM DUAL; --462
SELECT CEIL(461.91) FROM DUAL; --462

SELECT FLOOR(461.21) FROM DUAL; --461
SELECT FLOOR(461.91) FROM DUAL; --461

--MOD : 나머지
SELECT MOD(10,3) FROM DUAL;--1

-- ABS : 절대값
SELECT ABS(-123) FROM DUAL;--123

--SIGN : 결과값 양수면 1, 음수면 -1, 0이면 0 반환
SELECT SIGN(100/30),SIGN(-100/30),SIGN(100-100) FROM DUAL;

--POWER : 지수
SELECT POWER(2,4) FROM DUAL;

--SQRT : 제곱근
SELECT SQRT(9) FROM DUAL;


--문자함수
--UPPER : 소문자 -> 대문자
SELECT UPPER('oracle') FROM DUAL;

--LOWER : 대문자 -> 소문자
SELECT LOWER('ORACLE') FROM DUAL;

SELECT * FROM DIVISION;
SELECT * FROM DIVISION WHERE DNAME = UPPER('sales');
SELECT * FROM DIVISION WHERE LOWER(DNAME)= 'sales';

--INITCAP, 첫글자 대문자 변경
SELECT INITCAP('korea fighting') FROM DUAL;

--CONCAT, 문장 붙이기
SELECT PNAME || DNO FROM PERSONNEL;
SELECT CONCAT('KOREA','FIGHTING') FROM DUAL;

--LENGTH, 공백도 셈
SELECT LENGTH('KOREA') FROM DUAL;
SELECT LENGTH('KOREA FIGHTING') FROM DUAL;

--SUBSTR, 문자 추출
SELECT SUBSTR('ABCDEFG',1,3) FROM DUAL;--ABC
SELECT SUBSTR('ABCDEFG',3,2) FROM DUAL;--CD
SELECT SUBSTR('ABCDEFG',-3,2) FROM DUAL;--EF
SELECT SUBSTR('ABCDEFG',-4) FROM DUAL;--DEFG

--INSTR : 인덱스 번호
SELECT INSTR('ABCDEFG','C') FROM DUAL;--3
SELECT INSTR('AAAAAAA','A') FROM DUAL;--1, 첫번째것만 찾음
SELECT INSTR('ABCDEFG','a') FROM DUAL;--0

--RPAD/LPAD 
SELECT RPAD(PNAME,15,'*') FROM PERSONNEL;--15자에 오른쪽 남는자리에 *로 채움
SELECT LPAD(PNAME,15,'*') FROM PERSONNEL;--15자에 왼쪽 남는자리에 *로 채움

--RTRIM/LTRIM : 문자, 공백 지우기
SELECT RTRIM('ABBBBB','B') FROM DUAL;
SELECT RTRIM('A     ',' ') FROM DUAL;

SELECT RTRIM('BBABBB','B') FROM DUAL;
SELECT LTRIM('BBABBB','B') FROM DUAL;


--날짜함수

--SYSDATE, 연산가능
SELECT SYSDATE FROM DUAL; -- GETDATE()
SELECT SYSDATE+10 FROM DUAL;
SELECT STARTDATE-1,STARTDATE,STARTDATE+1 FROM PERSONNEL;

--KIM사원이 현재까지 근무한 년수를 구하시오
SELECT * FROM PERSONNEL;
SELECT PNAME,STARTDATE,(SYSDATE - STARTDATE) 근무일수 FROM PERSONNEL;
SELECT PNAME,STARTDATE,ROUND((SYSDATE - STARTDATE)/365) || '년차' 근무년수 FROM PERSONNEL WHERE PNAME = 'KIM';

--ROUND, 날짜 반올림
SELECT STARTDATE,ROUND(STARTDATE,'YEAR') FROM PERSONNEL; 

SELECT STARTDATE,ROUND(STARTDATE,'YEAR'),ROUND(STARTDATE,'MONTH') FROM PERSONNEL; 

--TO_CHAR : 날짜 문자열 변환,포맷가능
SELECT TO_CHAR(SYSDATE,'YY-MM-DD HH24:MI') FROM DUAL;

--TRUNC
SELECT STARTDATE,TRUNC(STARTDATE,'YEAR'),TRUNC(STARTDATE,'MONTH') FROM PERSONNEL; 

--달수 구하기 , MONTHS_BETWEEN
SELECT MONTHS_BETWEEN(SYSDATE,'2002-06-01') FROM DUAL;--277달차이
SELECT TRUNC(MONTHS_BETWEEN(SYSDATE,'2002-06-01')/12) NALSU FROM DUAL;

--EXTRACT : 날짜 추출
SELECT STARTDATE ,EXTRACT(YEAR FROM STARTDATE) 년, EXTRACT(MONTH FROM STARTDATE) 월, EXTRACT(DAY FROM STARTDATE) 일 FROM PERSONNEL;

--달의 마지막날
SELECT STARTDATE, LAST_DAY(STARTDATE) FROM PERSONNEL;

--NEXT_DAY : 다음 요일 반환
SELECT NEXT_DAY('2025-07-22', '금요일') FROM DUAL;
SELECT NEXT_DAY(SYSDATE, '화요일') FROM DUAL;

--달 더하기
SELECT ADD_MONTHS(SYSDATE,24) FROM DUAL;


--변환함수
/*
MM : 달수
MON : 3문자의 달 이름 (MAR)
MONTH : 달의 풀네임 (MARCH)
DD : 달의 날짜수(22)
D : 주의 수(1~7)
DY : 3문자의 요일이름(MON)
DAY : 일의 풀네임(MONDAY)
YYYY : 2025
YY : 25
RM : 로마식 달수(VII)
*/

SELECT SYSDATE, TO_CHAR(SYSDATE,'D') FROM DUAL;
SELECT SYSDATE, TO_CHAR(SYSDATE,'DY') FROM DUAL;
SELECT SYSDATE, TO_CHAR(SYSDATE,'MONTH') FROM DUAL;
SELECT SYSDATE, TO_CHAR(SYSDATE,'YYYY') FROM DUAL;
SELECT SYSDATE, TO_CHAR(SYSDATE,'DD') FROM DUAL;
SELECT SYSDATE, TO_CHAR(SYSDATE,'YY MM DD') FROM DUAL;
SELECT SYSDATE, TO_CHAR(SYSDATE,'RM') FROM DUAL;

SELECT PNAME,TO_CHAR(STARTDATE,'FMDD-MON-YY') STARTDATE1 ,TO_CHAR(STARTDATE,'DD-MON-YY') STARTDATE2 FROM PERSONNEL;


--시간
/*
HH,HH12 : 12시간
HH24 : 24시간
MI : 분
SS : 초
SSSSS : 초의 자릿수
AM,PM,A.M,P.M : 오전, 오후
*/

SELECT TO_CHAR(SYSDATE, 'HH24:MI:SS') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'A.M. HH:MI:SS') FROM DUAL;


--숫자형식
/*
9 : 숫자 자릿수
0 : 자릿수가 비면 0으로 채움
$ : 달러기호
PR : 음수표시
. , : 천단위 표시
*/

SELECT TO_CHAR(PAY,'$09,999.9') FROM PERSONNEL; 

SELECT TO_CHAR(-1000,'09,999PR') FROM DUAL;-- <숫자>는 음수표시

--서수표시
SELECT SYSDATE, TO_CHAR(SYSDATE,'DD') FROM DUAL;
SELECT SYSDATE, TO_CHAR(SYSDATE,'DDSP') FROM DUAL;
SELECT SYSDATE, TO_CHAR(SYSDATE,'DDTH') FROM DUAL;
SELECT SYSDATE, TO_CHAR(SYSDATE,'DDSPTH') FROM DUAL;

--TO_DATE : 문자열 날짜로 변경
SELECT TO_DATE('12-6월-23 11:05:22','YY-MONTH-DD HH:MI:SS') FROM DUAL;

--TO_NUMBER : 숫자로 변경
SELECT TO_NUMBER('123')+100 FROM DUAL;

SELECT TO_NUMBER('ABC')+100 FROM DUAL;--X

--NVL
SELECT BONUS,NVL(BONUS,0) FROM PERSONNEL;
SELECT MANAGER, NVL(TO_CHAR(MANAGER),'NO-MANAGER') FROM PERSONNEL;

--테이블 정보
DESCRIBE PERSONNEL;
DESC PERSONNEL;

--DECODE : IF문, 등호 연산만 가능
--각 사원의 급여를 부서가 10인 경우 10%, 20인 경우 20%, 나머지는 30%를 더해서 출력
SELECT PNAME,BONUS,DNO,PAY,DECODE(DNO,10,PAY*1.1,20,PAY*1.2,PAY*1.3) 인상분 FROM PERSONNEL;

--급여가 3500이상인 경우에는 GRADE를 'GOOD', 미만인 경우에는 'POOR'를 출력
SELECT PNAME,PAY FROM PERSONNEL WHERE PAY >= 3500;

SELECT PNAME,PAY,DECODE(SIGN(PAY-3500),1,'GOOD',0,'SOSO','POOR') GRADE FROM PERSONNEL;





















































































